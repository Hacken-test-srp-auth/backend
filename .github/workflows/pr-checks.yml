name: PR Check

on:
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      # Database
      POSTGRES_DB: ${{ fromJson(secrets.TEST_ENVS).database.POSTGRES_DB }}
      POSTGRES_USER: ${{ fromJson(secrets.TEST_ENVS).database.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ fromJson(secrets.TEST_ENVS).database.POSTGRES_PASSWORD }}
      DB_HOST: ${{ fromJson(secrets.TEST_ENVS).database.DB_HOST }}
      DB_PORT: ${{ fromJson(secrets.TEST_ENVS).database.DB_PORT }}
      
      # JWT
      JWT_SECRET: ${{ fromJson(secrets.TEST_ENVS).jwt.JWT_SECRET }}
      JWT_EXPIRATION_TIME: ${{ fromJson(secrets.TEST_ENVS).jwt.JWT_EXPIRATION_TIME }}
      JWT_REFRESH_SECRET: ${{ fromJson(secrets.TEST_ENVS).jwt.JWT_REFRESH_SECRET }}
      JWT_REFRESH_EXPIRATION_TIME: ${{ fromJson(secrets.TEST_ENVS).jwt.JWT_REFRESH_EXPIRATION_TIME }}
      
      # Redis
      REDIS_SESSION_PORT: ${{ fromJson(secrets.TEST_ENVS).redis.REDIS_SESSION_PORT }}
      REDIS_BLACKLIST_PORT: ${{ fromJson(secrets.TEST_ENVS).redis.REDIS_BLACKLIST_PORT }}
      
      # SRP
      N: 0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE65381FFFFFFFFFFFFFFFF
      g: 2
      k: 3
      
      # Environment
      NODE_ENV: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run linter
      run: yarn lint

    - name: Start test services
      run: docker compose -f docker-compose.test.yml up -d
            
    - name: Wait for services
      run: |
        timeout 30 bash -c 'until echo > /dev/tcp/localhost/5432; do sleep 1; done'
        timeout 30 bash -c 'until echo > /dev/tcp/localhost/6379; do sleep 1; done'

    - name: Run tests
      run: yarn test:e2e:ci
      
    - name: Stop test services
      if: always()
      run: docker compose -f docker-compose.test.yml down

    - name: Run build
      run: yarn build